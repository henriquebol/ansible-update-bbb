- hosts: 
  user: 
  become: true
  become_user: root
  gather_facts: yes
  tasks:
    - name: "Debug facts"
      debug: msg="ansible_fqdn is  {{ ansible_fqdn }}"
    # debug: var=ansible_facts

    # - name: Modify /etc/hosts
    #   lineinfile:
    #     path: /etc/hosts
    #     regexp: "^{{ inventory_hostname }}"
    #     line: "{{ inventory_hostname }}    {{ ansible_fqdn }} {{ ansible_hostname }}"        
    #     owner: root
    #     group: root
    #     mode: '0644'

    - name: Debug /etc/hosts
      shell: cat "/etc/hosts"
      register: etc_hosts
    - debug :
        var: etc_hosts.stdout_lines

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

      # In case of invalid signature in the update
      # sudo apt-key list | grep -A 1 expired
      # sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys <KEY>

    - name: Upgrade all packages on servers
      apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Script
      shell: sudo wget -qO- https://ubuntu.bigbluebutton.org/bbb-install.sh | bash -s -- -v bionic-23 -s "{{ ansible_fqdn }}" -e '{{ EMAIL }}' -c '{{ TURN_SERVER }}:{{ TURN_SECRET }}'

    # - name: BigBluebutton install
    #   include_role:
    #     name: n0emis.bigbluebutton
    #   vars:
    #     bbb_state: latest
    #     bbb_coturn_enable: no
    #     bbb_mute_on_start: no
    #     bbb_letsencrypt_email: '{{ EMAIL }}'
    #     bbb_greenlight_enable: no
    #     bbb_freeswitch_external_ip: "{{ inventory_hostname }}"
    #     bbb_turn_servers:
    #       - server: '{{ TURN_SERVER }}'
    #         port: '{{ TURN_PORT }}'
    #         secret: '{{ TURN_SECRET }}'
    #         tls: false
    #       - server: '{{ TURN_SERVER }}'
    #         port: '{{ TURN_PORT_SSL }}'
    #         secret: '{{ TURN_SECRET }}'
    #         tls: true

    - name: Copy default pdf
      copy:
        src: "{{ playbook_dir }}/files/default.pdf"
        dest: /var/www/bigbluebutton-default/
        owner: root
        group: root
        mode: '0755'

    - name: Copy favicon
      copy:
        src: "{{ playbook_dir }}/files/favicon.ico"
        dest: /var/www/bigbluebutton-default/

    - name: Copy logo
      copy:
        src: "{{ playbook_dir }}/files/logo.png"
        dest: /var/bigbluebutton/playback/presentation/2.0/
        owner: bigbluebutton
        group: bigbluebutton

    - name: Copy and extract audio (pt_BR)
      unarchive:
        src: "{{ playbook_dir }}/files/en.tar.gz"
        dest: /opt/freeswitch/share/freeswitch/sounds/

    - name: Recursively change ownership of a directory of audio (pt_BR)
      file:
        path: /opt/freeswitch/share/freeswitch/sounds/en
        state: directory
        recurse: yes
        owner: freeswitch
        group: daemon
        mode: '0755'
   
    - name: Copy cron bbb-recording-cleanup
      copy:
        src: "{{ playbook_dir }}/files/bbb-recording-cleanup"
        dest: /etc/cron.daily/

    - name: install rest-client gem 
      command: gem install rest-client

    - name: Copy ruby download script 
      copy:
        src: "{{ playbook_dir }}/files/download.rb"
        dest: /usr/local/bigbluebutton/core/scripts/post_publish/

    - name: Modify bigbluebutton.properties (defaultWelcomeMessageFooter, logoutURL, joinViaHTML5Client)
      lineinfile:
        path=/usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties
        regexp={{ item.regexp }}
        line={{ item.line }}
        backrefs=yes
      with_items:
        - { regexp: '^defaultWelcomeMessage=', line: 'defaultWelcomeMessage=<br><br>Bem-vindo \u00e0 <b>%%CONFNAME%%</b>!<br><br>Para participar da webconfer\u00eancia, seu computador deve ter, no m\u00ednimo, um <u>processador dual-core com pelo menos 2G de mem\u00f3ria, uma conex\u00e3o de 1Mbits de download e 0.5 Mbits de upload</u>. Voc\u00ea pode testar sua conex\u00e3o usando o <a href="event:http://www.speedtest.net" target="_blank" style="color: #1a0dab;"><u><b>speedtest.net</b></u></a>.<br><br>D\u00ea prefer\u00eancia a conex\u00f5es com cabo, redes sem fio podem ocasionar interrup\u00e7\u00f5es no \u00e1udio. Se sua internet estiver boa, o \u00e1udio tiver sido configurado corretamente e, mesmo assim, o seu \u00e1udio apresentar problemas, tente alternar de navegador. S\u00e3o recomendadas as \u00faltimas vers\u00f5es dos navegadores <a href="event:https://www.mozilla.org/pt-BR/firefox/new/" target="_blank" style="color: #1a0dab;"><u>Firefox</u></a> ou <a href="event:https://www.google.com.br/chrome/browser/desktop/" target="_blank" style="color: #1a0dab;"><u>Chrome</u></a>.<br><br>Ao final da webconfer\u00eancia, clique em sair, no canto superior direito, e responda ao nosso question\u00e1rio de avalia\u00e7\u00e3o da ferramenta.<br><br><b>Se esta webconfer\u00eancia estiver sendo gravada, a grava\u00e7\u00e3o ser\u00e1 armazenada por 180 dias. Ap\u00f3s este per\u00edodo, ser\u00e1 removida a fim de maximizar o uso da ferramenta em virtude da alta demanda.</b><br><br>Qualquer d\u00favida, problema ou dificuldade na utiliza\u00e7\u00e3o da ferramenta, <a href="{{ SUPPORT_URL }}" target="_blank" style="color: #1a0dab;">entre em contato com nosso suporte por meio da sala virtual de atendimento</a> ou entre em contato pelo email: {{ SUPPORT_EMAIL }}' }
        - { regexp: '^defaultWelcomeMessageFooter=', line: 'defaultWelcomeMessageFooter=<br>' }
        - { regexp: '^bigbluebutton.web.logoutURL=', line: 'bigbluebutton.web.logoutURL={{ FORM_LOGOUT_URL }}' }
        - { regexp: '^attendeesJoinViaHTML5Client=', line: 'attendeesJoinViaHTML5Client=true' }
        - { regexp: '^moderatorsJoinViaHTML5Client=', line: 'moderatorsJoinViaHTML5Client=true' }
        - { regexp: '^muteOnStart=', line: 'muteOnStart=false' }

    - name: Modify settings.yml (clientTitle, copyright, helpLink)
      lineinfile:
        path=/usr/share/meteor/bundle/programs/server/assets/app/config/settings.yml
        regexp={{ item.regexp }}
        line={{ item.line }}
        backrefs=yes
      with_items:
        - { regexp: '^        clientTitle:', line: '        clientTitle: "{{ CLIENT_TITLE }}"' }
        - { regexp: '^        copyright:', line: "        copyright: "{{ COPYRIGHT }}"" }
        - { regexp: '^        helpLink:', line: '        helpLink: "{{ SUPPORT_URL }}"' }

    - name: Modify layout
      lineinfile:
        path: /usr/share/meteor/bundle/programs/web.browser/head.html
        regexp: '^  <\/style>'
        line: '    header[class^="navbar"] { background: #003e7a; } </style>'

    # - name: Add cron job for certbot renewal.
    #   cron:
    #     name: Certbot automatic renewal.
    #     job: "/usr/bin/certbot renew >> /var/log/le-renew.log"
    #     minute: 30
    #     hour: 2
    #     weekday: 1

    # Manual installation
    # sudo crontab -e
    # 30 2 * * 1 /usr/bin/certbot renew >> /var/log/le-renew.log
    # 35 2 * * 1 /bin/systemctl reload nginx

    # - name: Add cron job for restart nginx
    #   cron:
    #     name: Restart nginx.
    #     job: "/bin/systemctl reload nginx"
    #     minute: 35
    #     hour: 2
    #     weekday: 1

    - name: Check crontab (letsencrypt)
      command: crontab -l
      register : check_crontab
    - debug :
        var: check_crontab.stdout_lines

    - name: Remove bbb-demo
      command: apt-get -y purge bbb-demo

    - name: Restart bbb-html5
      systemd:
        state: restarted
        name: bbb-html5
          
    - name: Restart bbb
      command: bbb-conf --restart

    - name: Check bbb
      command: bbb-conf --check
      register : result
    - debug :
        var: result.stdout_lines
